{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColour","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchedAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.943324ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3R6Vq\",\"card\":\"Cards_card__19sAb\",\"infected\":\"Cards_infected__12KeG\",\"recovered\":\"Cards_recovered__2tPwA\",\"deaths\":\"Cards_deaths__sEXWV\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Cards = ( { data: { confirmed, recovered, deaths, lastUpdate } })=>{\r\n  \r\n    \r\n    if(!confirmed){\r\n        return \"Loading...\";\r\n    }\r\n    return(\r\n         <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp\r\n                        start={0}\r\n                        end={confirmed.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                    />\r\n                    </Typography>\r\n                    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of activecases of covid-19</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n                 <Grid item component = {Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color='textSecondary' gutterBottom>Recoverd</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp\r\n                        start={0}\r\n                        end={recovered.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                    />\r\n                    </Typography>\r\n                    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recovered cases of covid-19</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n                 <Grid item component = {Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp\r\n                        start={0}\r\n                        end={deaths.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                    />\r\n                    </Typography>\r\n                    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deaths due to covid-19</Typography>\r\n                </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n         </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n \r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) =>{\r\n    try{\r\n        let changeableUrl=url;\r\n        if(country){\r\n            changeableUrl=url+'/countries/'+country\r\n        }\r\n\r\n        const {data:{confirmed, recovered, deaths,lastUpdate}}=await axios.get(changeableUrl)\r\n        return {confirmed, recovered, deaths,lastUpdate};\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try{\r\n        \r\n        const { data } = await axios.get('https://covid19.mathdro.id/api/daily');\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths:  dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n         }));\r\n       \r\n         return modifiedData;\r\n       \r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries  = async () =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get('https://covid19.mathdro.id/api/countries');\r\n\r\n        return countries.map((country)=>country.name);\r\n       // console.log(response);\r\n    }catch(error){\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data:{confirmed, recovered, deaths},country})=>{\r\n     const [dailyData, setDailyData]=useState([]);\r\n\r\n     useEffect(() =>{\r\n         const fetchAPI = async()=>{\r\n             setDailyData(await fetchDailyData());\r\n         }\r\n\r\n          \r\n\r\n         fetchAPI();\r\n     },[]);\r\n\r\n     const lineChart=(\r\n         dailyData[0]\r\n         ?(\r\n             <Line\r\n             data={{\r\n                 labels:dailyData.map(({date})=>date),\r\n                 datasets:[{\r\n                    data: dailyData.map(({confirmed})=>confirmed),\r\n                    label: \"Infected\",\r\n                    borderColour: \"#3333ff\",\r\n                    fill: true,\r\n                 },{\r\n                    data: dailyData.map(({deaths})=> deaths),\r\n                    label: \"Deaths\",\r\n                    borderColour: 'red',\r\n                    backgroundColor: 'rgb(255,0,0,0.5)',\r\n                    fill: true,\r\n                 }],\r\n             }}\r\n         />):null\r\n     )\r\n\r\n     const barChart=(\r\n         confirmed\r\n         ?(\r\n             <Bar\r\n             data={{\r\n                labels: ['Infected','Recovered','Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor:[\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)',\r\n                    ],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n             }}\r\n             options={{\r\n                 legend: {display: false},\r\n                 title: {display:true, text: 'Current state in '+country},\r\n             }}>\r\n\r\n             </Bar>\r\n         ):null\r\n     )\r\n\r\n     return(\r\n        <div className={styles.container}>\r\n            { country ? barChart : lineChart }\r\n        </div>\r\n     );\r\n}\r\nexport default Charts;","import React,{ useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n    const [fetchedCountries, setFetchedCountries]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchedAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchedAPI();\r\n    },[]);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=''>Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Cards,Charts,CountryPicker} from './components'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from  './api';\r\nimport image from './images/image.png';\r\n \r\n\r\nclass App extends React.Component{\r\n\r\n    state={\r\n        data:{},\r\n        country:\"\",\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n        this.setState({data:fetchedData, country: country});\r\n        // fetch data\r\n        // set state\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const  { data, country } = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n            <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n               <Cards data={data}/>\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}></CountryPicker>\r\n               <Charts data={data} country={country}></Charts>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Rytg\",\"image\":\"App_image__1TBXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__rBFhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__WeLXh\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}